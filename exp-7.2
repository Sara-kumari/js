Folder structure:

src/
 â”£ features/
 â”ƒ â”— cartSlice.js
 â”£ app/
 â”ƒ â”— store.js
 â”£ App.js
 â”— index.js

///// src/app/store.js
import { configureStore } from '@reduxjs/toolkit';
import cartReducer from '../features/cartSlice';

export const store = configureStore({
  reducer: {
    cart: cartReducer,
  },
});

/////////// src/features/cartSlice.js
import { createSlice } from '@reduxjs/toolkit';

const initialState = {
  items: [],  // [{ id, name, price, quantity }]
  totalQuantity: 0,
  totalPrice: 0,
};

const cartSlice = createSlice({
  name: 'cart',
  initialState,
  reducers: {
    addToCart: (state, action) => {
      const item = action.payload;
      const existingItem = state.items.find(i => i.id === item.id);
      if (existingItem) {
        existingItem.quantity += 1;
      } else {
        state.items.push({ ...item, quantity: 1 });
      }
      state.totalQuantity += 1;
      state.totalPrice += item.price;
    },
    removeFromCart: (state, action) => {
      const id = action.payload;
      const existingItem = state.items.find(i => i.id === id);
      if (existingItem) {
        state.totalQuantity -= 1;
        state.totalPrice -= existingItem.price;
        existingItem.quantity -= 1;
        if (existingItem.quantity === 0) {
          state.items = state.items.filter(i => i.id !== id);
        }
      }
    },
    clearCart: (state) => {
      state.items = [];
      state.totalQuantity = 0;
      state.totalPrice = 0;
    },
  },
});

export const { addToCart, removeFromCart, clearCart } = cartSlice.actions;
export default cartSlice.reducer;

 Step 3: Connect Redux to React
// src/index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import { Provider } from 'react-redux';
import { store } from './app/store';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <Provider store={store}>
    <App />
  </Provider>
);

 Step 4: Use Redux in Components
// src/App.js
import React from "react";
import { useDispatch, useSelector } from "react-redux";
import { addToCart, removeFromCart, clearCart } from "./features/cartSlice";

const products = [
  { id: 1, name: "Laptop", price: 60000 },
  { id: 2, name: "Phone", price: 30000 },
  { id: 3, name: "Headphones", price: 2000 },
];

function App() {
  const dispatch = useDispatch();
  const { items, totalQuantity, totalPrice } = useSelector(state => state.cart);

  return (
    <div style={{ padding: "20px" }}>
      <h2> Product List</h2>
      {products.map(product => (
        <div key={product.id} style={{ marginBottom: "10px" }}>
          <strong>{product.name}</strong> â€” â‚¹{product.price}
          <button
            onClick={() => dispatch(addToCart(product))}
            style={{ marginLeft: "10px" }}
          >
            Add to Cart
          </button>
        </div>
      ))}

      <hr />

      <h3>ðŸ›’ Cart Summary</h3>
      <p>Total Items: {totalQuantity}</p>
      <p>Total Price: â‚¹{totalPrice}</p>
      <button onClick={() => dispatch(clearCart())}>Clear Cart</button>

      <ul>
        {items.map(item => (
          <li key={item.id}>
            {item.name} Ã— {item.quantity} = â‚¹{item.price * item.quantity}
            <button
              onClick={() => dispatch(removeFromCart(item.id))}
              style={{ marginLeft: "10px" }}
            >
              Remove
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
}

export default App;
